// Code generated by goctl. DO NOT EDIT.
// Source: accountsvc.proto

package accountlogsvc

import (
	"context"

	"github.com/aheadIV/NightVoyager/accountsvc/types/accountsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Account            = accountsvc.Account
	AccountLog         = accountsvc.AccountLog
	AccountLogListReq  = accountsvc.AccountLogListReq
	AccountLogListResp = accountsvc.AccountLogListResp
	CreateReq          = accountsvc.CreateReq
	CreateResp         = accountsvc.CreateResp
	DeleteReq          = accountsvc.DeleteReq
	DeleteResp         = accountsvc.DeleteResp
	GetByAccountReq    = accountsvc.GetByAccountReq
	GetByAccountResp   = accountsvc.GetByAccountResp
	GetByIdReq         = accountsvc.GetByIdReq
	GetByIdResp        = accountsvc.GetByIdResp
	InsertLogReq       = accountsvc.InsertLogReq
	InsertLogResp      = accountsvc.InsertLogResp
	UpdateReq          = accountsvc.UpdateReq
	UpdateResp         = accountsvc.UpdateResp

	AccountLogSvc interface {
		InsertLog(ctx context.Context, in *InsertLogReq, opts ...grpc.CallOption) (*InsertLogResp, error)
		AccountLogList(ctx context.Context, in *AccountLogListReq, opts ...grpc.CallOption) (*AccountLogListResp, error)
	}

	defaultAccountLogSvc struct {
		cli zrpc.Client
	}
)

func NewAccountLogSvc(cli zrpc.Client) AccountLogSvc {
	return &defaultAccountLogSvc{
		cli: cli,
	}
}

func (m *defaultAccountLogSvc) InsertLog(ctx context.Context, in *InsertLogReq, opts ...grpc.CallOption) (*InsertLogResp, error) {
	client := accountsvc.NewAccountLogSvcClient(m.cli.Conn())
	return client.InsertLog(ctx, in, opts...)
}

func (m *defaultAccountLogSvc) AccountLogList(ctx context.Context, in *AccountLogListReq, opts ...grpc.CallOption) (*AccountLogListResp, error) {
	client := accountsvc.NewAccountLogSvcClient(m.cli.Conn())
	return client.AccountLogList(ctx, in, opts...)
}

// Code generated by goctl. DO NOT EDIT.
// Source: accountsvc.proto

package accountsvc_client

import (
	"context"

	"github.com/aheadIV/NightVoyager/accountsvc/types/accountsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = accountsvc.Request
	Response = accountsvc.Response

	Accountsvc interface {
		GetByAccount(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		GetByID(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Create(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Update(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultAccountsvc struct {
		cli zrpc.Client
	}
)

func NewAccountsvc(cli zrpc.Client) Accountsvc {
	return &defaultAccountsvc{
		cli: cli,
	}
}

func (m *defaultAccountsvc) GetByAccount(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := accountsvc.NewAccountsvcClient(m.cli.Conn())
	return client.GetByAccount(ctx, in, opts...)
}

func (m *defaultAccountsvc) GetByID(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := accountsvc.NewAccountsvcClient(m.cli.Conn())
	return client.GetByID(ctx, in, opts...)
}

func (m *defaultAccountsvc) Create(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := accountsvc.NewAccountsvcClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultAccountsvc) Update(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := accountsvc.NewAccountsvcClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultAccountsvc) Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := accountsvc.NewAccountsvcClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

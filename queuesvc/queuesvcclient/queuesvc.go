// Code generated by goctl. DO NOT EDIT.
// Source: queuesvc.proto

package queuesvcclient

import (
	"context"

	"github.com/aheadIV/NightVoyager/queuesvc/types/queuesvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = queuesvc.Request
	Response = queuesvc.Response

	Queuesvc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultQueuesvc struct {
		cli zrpc.Client
	}
)

func NewQueuesvc(cli zrpc.Client) Queuesvc {
	return &defaultQueuesvc{
		cli: cli,
	}
}

func (m *defaultQueuesvc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := queuesvc.NewQueuesvcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

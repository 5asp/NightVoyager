// Code generated by goctl. DO NOT EDIT.
// Source: appsvc.proto

package appsvcclient

import (
	"context"

	"github.com/aheadIV/NightVoyager/appsvc/types/appsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateAppReq  = appsvc.CreateAppReq
	CreateAppResp = appsvc.CreateAppResp
	GetAppReq     = appsvc.GetAppReq
	GetAppResp    = appsvc.GetAppResp

	Appsvc interface {
		GetApp(ctx context.Context, in *GetAppReq, opts ...grpc.CallOption) (*GetAppResp, error)
		CreateApp(ctx context.Context, in *CreateAppReq, opts ...grpc.CallOption) (*CreateAppResp, error)
	}

	defaultAppsvc struct {
		cli zrpc.Client
	}
)

func NewAppsvc(cli zrpc.Client) Appsvc {
	return &defaultAppsvc{
		cli: cli,
	}
}

func (m *defaultAppsvc) GetApp(ctx context.Context, in *GetAppReq, opts ...grpc.CallOption) (*GetAppResp, error) {
	client := appsvc.NewAppsvcClient(m.cli.Conn())
	return client.GetApp(ctx, in, opts...)
}

func (m *defaultAppsvc) CreateApp(ctx context.Context, in *CreateAppReq, opts ...grpc.CallOption) (*CreateAppResp, error) {
	client := appsvc.NewAppsvcClient(m.cli.Conn())
	return client.CreateApp(ctx, in, opts...)
}

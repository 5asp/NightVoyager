// Code generated by goctl. DO NOT EDIT.
// Source: appsvc.proto

package sendlogsvc

import (
	"context"

	"github.com/aheadIV/NightVoyager/appsvc/types/appsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	App            = appsvc.App
	AppListReq     = appsvc.AppListReq
	AppListResp    = appsvc.AppListResp
	CreateAppReq   = appsvc.CreateAppReq
	CreateAppResp  = appsvc.CreateAppResp
	GetAppByIdReq  = appsvc.GetAppByIdReq
	GetAppByIdResp = appsvc.GetAppByIdResp
	Req            = appsvc.Req
	Resp           = appsvc.Resp

	SendLogsvc interface {
		InsertLog(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
		SendLogList(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
	}

	defaultSendLogsvc struct {
		cli zrpc.Client
	}
)

func NewSendLogsvc(cli zrpc.Client) SendLogsvc {
	return &defaultSendLogsvc{
		cli: cli,
	}
}

func (m *defaultSendLogsvc) InsertLog(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	client := appsvc.NewSendLogsvcClient(m.cli.Conn())
	return client.InsertLog(ctx, in, opts...)
}

func (m *defaultSendLogsvc) SendLogList(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	client := appsvc.NewSendLogsvcClient(m.cli.Conn())
	return client.SendLogList(ctx, in, opts...)
}

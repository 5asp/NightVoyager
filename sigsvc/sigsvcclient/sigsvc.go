// Code generated by goctl. DO NOT EDIT.
// Source: sigsvc.proto

package sigsvcclient

import (
	"context"

	"github.com/aheadIV/NightVoyager/sigsvc/sigsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = sigsvc.Request
	Response = sigsvc.Response

	Sigsvc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultSigsvc struct {
		cli zrpc.Client
	}
)

func NewSigsvc(cli zrpc.Client) Sigsvc {
	return &defaultSigsvc{
		cli: cli,
	}
}

func (m *defaultSigsvc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := sigsvc.NewSigsvcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

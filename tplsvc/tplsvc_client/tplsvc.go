// Code generated by goctl. DO NOT EDIT.
// Source: tplsvc.proto

package tplsvc_client

import (
	"context"

	"github.com/aheadIV/NightVoyager/tplsvc/types/tplsvc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = tplsvc.Request
	Response = tplsvc.Response

	Tplsvc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultTplsvc struct {
		cli zrpc.Client
	}
)

func NewTplsvc(cli zrpc.Client) Tplsvc {
	return &defaultTplsvc{
		cli: cli,
	}
}

func (m *defaultTplsvc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := tplsvc.NewTplsvcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// Code generated by goctl. DO NOT EDIT.
// Source: tplsvc.proto

package server

import (
	"context"

	"github.com/aheadIV/NightVoyager/tplsvc/internal/logic/tplsvc"
	"github.com/aheadIV/NightVoyager/tplsvc/internal/svc"
	"github.com/aheadIV/NightVoyager/tplsvc/types/tplsvc"
)

type TplSvcServer struct {
	svcCtx *svc.ServiceContext
	tplsvc.UnimplementedTplSvcServer
}

func NewTplSvcServer(svcCtx *svc.ServiceContext) *TplSvcServer {
	return &TplSvcServer{
		svcCtx: svcCtx,
	}
}

func (s *TplSvcServer) GetTplById(ctx context.Context, in *tplsvc.GetTplByIdReq) (*tplsvc.GetTplByIdResp, error) {
	l := tplsvclogic.NewGetTplByIdLogic(ctx, s.svcCtx)
	return l.GetTplById(in)
}

func (s *TplSvcServer) CreateTpl(ctx context.Context, in *tplsvc.CreateTplReq) (*tplsvc.CreateTplResp, error) {
	l := tplsvclogic.NewCreateTplLogic(ctx, s.svcCtx)
	return l.CreateTpl(in)
}

func (s *TplSvcServer) UpdateTpl(ctx context.Context, in *tplsvc.UpdateTplReq) (*tplsvc.UpdateTplResp, error) {
	l := tplsvclogic.NewUpdateTplLogic(ctx, s.svcCtx)
	return l.UpdateTpl(in)
}

func (s *TplSvcServer) DeleteTpl(ctx context.Context, in *tplsvc.DeleteTplReq) (*tplsvc.DeletTplResp, error) {
	l := tplsvclogic.NewDeleteTplLogic(ctx, s.svcCtx)
	return l.DeleteTpl(in)
}

func (s *TplSvcServer) TplList(ctx context.Context, in *tplsvc.TplListReq) (*tplsvc.TplListResp, error) {
	l := tplsvclogic.NewTplListLogic(ctx, s.svcCtx)
	return l.TplList(in)
}
